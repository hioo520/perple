<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="damo.mapper.PunchClockMapper">
	<!-- 插入打卡记录条 -->
	<!-- INSERT INTO punchclock (usercode,businessdata,closingtime,duration) 
		VALUES (#{userCode}, #{businessData}, #{closingTime}, #{duration}) -->
	<insert id="addPunchClock" parameterType="PunchClockBean">
		INSERT INTO punchclock
		(usercode,businessdata) VALUES
		(#{userCode}, #{businessData})
	</insert>
	<!-- INSERT INTO punchclock (`usercode`, `businessdata`, `closingtime`, 
		`duration`) VALUES (1, '2017-10-28 14:15:56', '2017-10-28 14:15:56', '8.9') -->
	<!-- 查找一条数据 map '%${businessData}%' #{userCode} -->
	<select id="findOnePunchClock" parameterType="map" resultType="PunchClockBean">
		SELECT * FROM punchclock WHERE usercode =#{userCode} AND businessdata
		LIKE '${businessData}%'
	</select>
	<select id="findOnePunchClockLike" parameterType="map"
		resultType="PunchClockBean">
		SELECT * FROM punchclock WHERE usercode =#{userCode} AND
		businessdata LIKE '%${businessData}%'
	</select>
	<!-- 返回多条条数据 map -->
	<select id="findListPunchClock" parameterType="map" resultType="PunchClockBean">
		select *
		from punchclock where usercode= #{userCode} AND businessData=
		#{businessData}
	</select>
	<!-- 返回多条条数据 map findListPunchClockString -->
	<select id="findListPunchClockString" parameterType="String"
		resultType="PunchClockBean">
		select *
		from punchclock where usercode= #{userCode}
	</select>
	<select id="findOnePunchClockString" parameterType="String"
		resultType="PunchClockBean">
		select *
		from punchclock where usercode= #{userCode}
	</select>
	<!-- 更改一条数据 退卡 -->
	<update id="updatePunchClock" parameterType="PunchClockBean">
		UPDATE
		punchclock
		SET
		closingtime = #{closingTime},
		duration = #{duration}
		WHERE usercode =
		#{userCode}
	</update>
	<!-- 查找一条数据 String -->
	<select id="AnythingDatePunchClock" parameterType="String"
		resultType="PunchClockBean">
		select *
		from userdetailde where userCode= #{userCode}
	</select>

	<!-- 分页容器 -->
	<!-- paging查询 设置默认欲查询条数 -->
	<!-- SELECT * FROM USER LIMIT 9, 10 -->
	<select id="pagingUserDefault" parameterType="_int" resultType="PunchClockBean">
		SELECT *
		FROM punchclock LIMIT 0, #{id}
	</select>
	<!-- 遍历所有数据 -->
	<!-- SELELCT COUNT(*) AS 及格人数 FROM Score WHERE Score >=60 -->
	<select id="pagingUserCount" resultType="_int">
		SELECT COUNT(userCode)
		FROM punchclock
	</select>
	<!-- SELECT * FROM USER LIMIT 9, 10 -->
	<select id="pagingUserLimit" parameterType="map" resultType="PunchClockBean">
		SELECT *
		FROM punchclock LIMIT ${begin}, ${end}
	</select>


</mapper>
